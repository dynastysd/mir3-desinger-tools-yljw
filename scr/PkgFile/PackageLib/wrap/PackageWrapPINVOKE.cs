//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class PackageWrapPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="SWIGRegisterExceptionCallbacks_PackageWrap")]
    public static extern void SWIGRegisterExceptionCallbacks_PackageWrap(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_PackageWrap")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_PackageWrap(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_PackageWrap(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_PackageWrap(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="SWIGRegisterStringCallback_PackageWrap")]
    public static extern void SWIGRegisterStringCallback_PackageWrap(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_PackageWrap(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static PackageWrapPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_offx_set")]
  public static extern void ImageFrameInfo_offx_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_offx_get")]
  public static extern short ImageFrameInfo_offx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_offy_set")]
  public static extern void ImageFrameInfo_offy_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_offy_get")]
  public static extern short ImageFrameInfo_offy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_wid_set")]
  public static extern void ImageFrameInfo_wid_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_wid_get")]
  public static extern short ImageFrameInfo_wid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_hei_set")]
  public static extern void ImageFrameInfo_hei_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_hei_get")]
  public static extern short ImageFrameInfo_hei_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_posx_set")]
  public static extern void ImageFrameInfo_posx_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_posx_get")]
  public static extern short ImageFrameInfo_posx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_posy_set")]
  public static extern void ImageFrameInfo_posy_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_posy_get")]
  public static extern short ImageFrameInfo_posy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_image_set")]
  public static extern void ImageFrameInfo_image_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_image_get")]
  public static extern ushort ImageFrameInfo_image_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_rotated_set")]
  public static extern void ImageFrameInfo_rotated_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_rotated_get")]
  public static extern bool ImageFrameInfo_rotated_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_reserved_set")]
  public static extern void ImageFrameInfo_reserved_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_reserved_get")]
  public static extern bool ImageFrameInfo_reserved_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_owid_set")]
  public static extern void ImageFrameInfo_owid_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_owid_get")]
  public static extern short ImageFrameInfo_owid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_ohei_set")]
  public static extern void ImageFrameInfo_ohei_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ImageFrameInfo_ohei_get")]
  public static extern short ImageFrameInfo_ohei_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_ImageFrameInfo")]
  public static extern global::System.IntPtr new_ImageFrameInfo();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_ImageFrameInfo")]
  public static extern void delete_ImageFrameInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_offx_set")]
  public static extern void TexInfo_offx_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_offx_get")]
  public static extern short TexInfo_offx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_offy_set")]
  public static extern void TexInfo_offy_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_offy_get")]
  public static extern short TexInfo_offy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_wid_set")]
  public static extern void TexInfo_wid_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_wid_get")]
  public static extern short TexInfo_wid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_hei_set")]
  public static extern void TexInfo_hei_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_TexInfo_hei_get")]
  public static extern short TexInfo_hei_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_TexInfo")]
  public static extern global::System.IntPtr new_TexInfo();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_TexInfo")]
  public static extern void delete_TexInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_BufferType_data")]
  public static extern global::System.IntPtr BufferType_data(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_BufferType_size")]
  public static extern uint BufferType_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_BufferType")]
  public static extern void delete_BufferType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_BufferType")]
  public static extern global::System.IntPtr new_BufferType();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_BufferType_resize")]
  public static extern void BufferType_resize(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Clear")]
  public static extern void VectorInt_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Add")]
  public static extern void VectorInt_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_size")]
  public static extern uint VectorInt_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_capacity")]
  public static extern uint VectorInt_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_reserve")]
  public static extern void VectorInt_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_VectorInt__SWIG_0")]
  public static extern global::System.IntPtr new_VectorInt__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_VectorInt__SWIG_1")]
  public static extern global::System.IntPtr new_VectorInt__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_VectorInt__SWIG_2")]
  public static extern global::System.IntPtr new_VectorInt__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_getitemcopy")]
  public static extern int VectorInt_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_getitem")]
  public static extern int VectorInt_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_setitem")]
  public static extern void VectorInt_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_AddRange")]
  public static extern void VectorInt_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_GetRange")]
  public static extern global::System.IntPtr VectorInt_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Insert")]
  public static extern void VectorInt_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_InsertRange")]
  public static extern void VectorInt_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_RemoveAt")]
  public static extern void VectorInt_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_RemoveRange")]
  public static extern void VectorInt_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Repeat")]
  public static extern global::System.IntPtr VectorInt_Repeat(int jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Reverse__SWIG_0")]
  public static extern void VectorInt_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Reverse__SWIG_1")]
  public static extern void VectorInt_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_SetRange")]
  public static extern void VectorInt_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Contains")]
  public static extern bool VectorInt_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_IndexOf")]
  public static extern int VectorInt_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_LastIndexOf")]
  public static extern int VectorInt_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_VectorInt_Remove")]
  public static extern bool VectorInt_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_VectorInt")]
  public static extern void delete_VectorInt(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2String__SWIG_0")]
  public static extern global::System.IntPtr new_MapInt2String__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2String__SWIG_1")]
  public static extern global::System.IntPtr new_MapInt2String__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_size")]
  public static extern uint MapInt2String_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_empty")]
  public static extern bool MapInt2String_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_Clear")]
  public static extern void MapInt2String_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_getitem")]
  public static extern string MapInt2String_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_setitem")]
  public static extern void MapInt2String_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_ContainsKey")]
  public static extern bool MapInt2String_ContainsKey(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_Add")]
  public static extern void MapInt2String_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_Remove")]
  public static extern bool MapInt2String_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_create_iterator_begin")]
  public static extern global::System.IntPtr MapInt2String_create_iterator_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_get_next_key")]
  public static extern int MapInt2String_get_next_key(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2String_destroy_iterator")]
  public static extern void MapInt2String_destroy_iterator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_MapInt2String")]
  public static extern void delete_MapInt2String(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2ImageFrameInfo__SWIG_0")]
  public static extern global::System.IntPtr new_MapInt2ImageFrameInfo__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2ImageFrameInfo__SWIG_1")]
  public static extern global::System.IntPtr new_MapInt2ImageFrameInfo__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_size")]
  public static extern uint MapInt2ImageFrameInfo_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_empty")]
  public static extern bool MapInt2ImageFrameInfo_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_Clear")]
  public static extern void MapInt2ImageFrameInfo_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_getitem")]
  public static extern global::System.IntPtr MapInt2ImageFrameInfo_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_setitem")]
  public static extern void MapInt2ImageFrameInfo_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_ContainsKey")]
  public static extern bool MapInt2ImageFrameInfo_ContainsKey(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_Add")]
  public static extern void MapInt2ImageFrameInfo_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_Remove")]
  public static extern bool MapInt2ImageFrameInfo_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_create_iterator_begin")]
  public static extern global::System.IntPtr MapInt2ImageFrameInfo_create_iterator_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_get_next_key")]
  public static extern int MapInt2ImageFrameInfo_get_next_key(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2ImageFrameInfo_destroy_iterator")]
  public static extern void MapInt2ImageFrameInfo_destroy_iterator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_MapInt2ImageFrameInfo")]
  public static extern void delete_MapInt2ImageFrameInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2RemoteFileData__SWIG_0")]
  public static extern global::System.IntPtr new_MapInt2RemoteFileData__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_MapInt2RemoteFileData__SWIG_1")]
  public static extern global::System.IntPtr new_MapInt2RemoteFileData__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_size")]
  public static extern uint MapInt2RemoteFileData_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_empty")]
  public static extern bool MapInt2RemoteFileData_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_Clear")]
  public static extern void MapInt2RemoteFileData_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_getitem")]
  public static extern global::System.IntPtr MapInt2RemoteFileData_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_setitem")]
  public static extern void MapInt2RemoteFileData_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_ContainsKey")]
  public static extern bool MapInt2RemoteFileData_ContainsKey(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_Add")]
  public static extern void MapInt2RemoteFileData_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_Remove")]
  public static extern bool MapInt2RemoteFileData_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_create_iterator_begin")]
  public static extern global::System.IntPtr MapInt2RemoteFileData_create_iterator_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_get_next_key")]
  public static extern int MapInt2RemoteFileData_get_next_key(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_MapInt2RemoteFileData_destroy_iterator")]
  public static extern void MapInt2RemoteFileData_destroy_iterator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_MapInt2RemoteFileData")]
  public static extern void delete_MapInt2RemoteFileData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_ZSTDCompress")]
  public static extern global::System.IntPtr new_ZSTDCompress();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_ZSTDCompress")]
  public static extern void delete_ZSTDCompress(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ZSTDCompress_compress")]
  public static extern uint ZSTDCompress_compress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ZSTDCompress_decompress")]
  public static extern uint ZSTDCompress_decompress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ZSTDCompress_isError_zstd")]
  public static extern int ZSTDCompress_isError_zstd(uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_ZSTDCompress_getErrorDesc_zstd")]
  public static extern string ZSTDCompress_getErrorDesc_zstd(uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_addBuffer__SWIG_0")]
  public static extern int Package_addBuffer__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.IntPtr jarg3, uint jarg4, bool jarg5, int jarg6);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_addBuffer__SWIG_1")]
  public static extern int Package_addBuffer__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.IntPtr jarg3, uint jarg4, bool jarg5);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_getBuffer")]
  public static extern int Package_getBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, out uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_isFrameExist")]
  public static extern bool Package_isFrameExist(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_isReadOnly")]
  public static extern bool Package_isReadOnly(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_close")]
  public static extern int Package_close(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Package_applyWritedData")]
  public static extern int Package_applyWritedData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_Package")]
  public static extern void delete_Package(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PACKAGE_OPEN")]
  public static extern global::System.IntPtr PACKAGE_OPEN(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_Callback")]
  public static extern void delete_Callback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Callback_run")]
  public static extern void Callback_run(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Callback_runSwigExplicitCallback")]
  public static extern void Callback_runSwigExplicitCallback(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Callback_SetCallback")]
  public static extern void Callback_SetCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Callback_Call")]
  public static extern void Callback_Call(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_Callback")]
  public static extern global::System.IntPtr new_Callback();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_Callback_director_connect")]
  public static extern void Callback_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, Callback.SwigDelegateCallback_0 delegate0);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_data_set")]
  public static extern void RemoteFileData_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_data_get")]
  public static extern global::System.IntPtr RemoteFileData_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_size_set")]
  public static extern void RemoteFileData_size_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_size_get")]
  public static extern uint RemoteFileData_size_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_compressedSize_set")]
  public static extern void RemoteFileData_compressedSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_RemoteFileData_compressedSize_get")]
  public static extern uint RemoteFileData_compressedSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_RemoteFileData")]
  public static extern global::System.IntPtr new_RemoteFileData();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_RemoteFileData")]
  public static extern void delete_RemoteFileData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_GetKeys")]
  public static extern bool PackageUtil_GetKeys(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_ParseImageInfos")]
  public static extern bool PackageUtil_ParseImageInfos(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_BuildImageInfos")]
  public static extern bool PackageUtil_BuildImageInfos(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_ParseRemoteInfos")]
  public static extern bool PackageUtil_ParseRemoteInfos(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_BuildRemoteInfos")]
  public static extern bool PackageUtil_BuildRemoteInfos(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_ParseTexInfo")]
  public static extern bool PackageUtil_ParseTexInfo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_BuildTexInfo")]
  public static extern bool PackageUtil_BuildTexInfo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_ParseRemoteBlock")]
  public static extern bool PackageUtil_ParseRemoteBlock(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_BuildRemoteBlock")]
  public static extern bool PackageUtil_BuildRemoteBlock(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_PackageUtil_DetectFormat")]
  public static extern int PackageUtil_DetectFormat(global::System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_new_PackageUtil")]
  public static extern global::System.IntPtr new_PackageUtil();

  [global::System.Runtime.InteropServices.DllImport("PackageWrap", EntryPoint="CSharp_delete_PackageUtil")]
  public static extern void delete_PackageUtil(global::System.Runtime.InteropServices.HandleRef jarg1);
}
